name: elixir
on:
  pull_request:
    branches: ["main"]
jobs:
  lint:
    name: lint
    runs-on: ubuntu-large
    defaults:
      run:
        working-directory: "services/dashboard"
    steps:
      - name: Check out source
        uses: actions/checkout@v2
      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: "26.1"
          elixir-version: "1.15.7"
      - name: mix deps.get
        run: mix deps.get
      - name: check unused deps
        run: mix deps.unlock --check-unused
      - name: compile
        run: mix compile --all-warnings --warning-as-errors
      - name: format
        run: mix format --dry-run --check-formatted
  dialyzer:
    name: dialyzer
    runs-on: ubuntu-large
    defaults:
      run:
        working-directory: "services/dashboard"
    steps:
      - name: Check out source
        uses: actions/checkout@v2

      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: "26.1"
          elixir-version: "1.15.7"
      - name: mix deps.get
        run: mix deps.get
      - name: restore PLT cache
        id: plt_cache
        uses: actions/cache/restore@v3
        with:
          key: |
            plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            priv/plts

      # Create PLTs if no cache was found
      - name: create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      # By default, the GitHub Cache action will only save the cache if all steps in the job succeed,
      # so we separate the cache restore and save steps in case running dialyzer fails.
      - name: save PLT cache
        id: plt_cache_save
        uses: actions/cache/save@v3
        if: steps.plt_cache.outputs.cache-hit != 'true'
        with:
          key: |
            plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          path: |
            priv/plts
      - name: dialyzer
        run: mix dialyzer --format github
