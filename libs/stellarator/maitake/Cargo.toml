[package]
name = "maitake"
version = "0.1.0"
authors = [
    "Eliza Weisman <eliza@elizas.website>",
    "James Munns <james@onevariable.com>"
]
description = "Async runtime construction kit"
repository = "https://github.com/hawkw/mycelium"
documentation = "https://mycelium.elizas.website/maitake"
homepage = "https://mycelium.elizas.website"
license = "MIT"
readme = "README.md"
keywords = ["async", "no_std", "task", "runtime", "scheduler"]
categories = [
    "no-std",
    "async",
]
edition = "2024"

# NOTE! As a workaround for https://github.com/rust-lang/rust/issues/97708,
# maitake uses some `no_mangle` functions. This will cause linker errors if
# you attempt to use two versions of maitake in the same binary. Until then,
# we use the "links" key to prevent two versions of maitake in the same
# dependency graph
links = "maitake"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["alloc"]
alloc = ["cordyceps/alloc", "maitake-sync/alloc"]
std = ["alloc", "maitake-sync/std", "tracing/std"]
no-cache-pad = ["mycelium-util/no-cache-pad", "cordyceps/no-cache-pad", "maitake-sync/no-cache-pad"]
core-error = ["maitake-sync/core-error"]
critical-section = ["portable-atomic/critical-section"]

[dependencies]
# mycelium-bitfield = { path = "../bitfield" }
mycelium-bitfield = "0.1.5"
mycelium-util = { path = "./util" }
maitake-sync = { path = "./sync" }
#maitake-sync = "0.1.2"
# cordyceps = { path = "../cordyceps" }
cordyceps = "0.3.2"
pin-project = "1"
portable-atomic = "1.2"
tracing = { version = "0.1", default-features = false, features = ["attributes"] }


[dev-dependencies]
tracing-subscriber = "0.3"
futures-util = "0.3"
futures = "0.3"
tokio-test = "0.4"

[target.'cfg(not(loom))'.dev-dependencies]
console-subscriber = "0.1.6"
proptest = "1"

[target.'cfg(loom)'.dev-dependencies]
loom = { version = "0.7", features = ["futures", "checkpoint"] }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[[example]]
name = "tokio-console"

[lints.rust.unexpected_cfgs]
level = "allow"
check-cfg = [
  'cfg(loom)',
  'cfg(maitake_ultraverbose)'
]
