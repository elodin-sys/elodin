use crate::sys::MAGtype_MagneticModel;

// source: WMM 2020 coefficients, converted using coef2rs.jl
pub const WMM: &[(usize, usize, f64, f64, f64, f64)] = &[
    (1, 0, -29404.5, 0.0, 6.7, 0.0),
    (1, 1, -1450.7, 4652.9, 7.7, -25.1),
    (2, 0, -2500.0, 0.0, -11.5, 0.0),
    (2, 1, 2982.0, -2991.6, -7.1, -30.2),
    (2, 2, 1676.8, -734.8, -2.2, -23.9),
    (3, 0, 1363.9, 0.0, 2.8, 0.0),
    (3, 1, -2381.0, -82.2, -6.2, 5.7),
    (3, 2, 1236.2, 241.8, 3.4, -1.0),
    (3, 3, 525.7, -542.9, -12.2, 1.1),
    (4, 0, 903.1, 0.0, -1.1, 0.0),
    (4, 1, 809.4, 282.0, -1.6, 0.2),
    (4, 2, 86.2, -158.4, -6.0, 6.9),
    (4, 3, -309.4, 199.8, 5.4, 3.7),
    (4, 4, 47.9, -350.1, -5.5, -5.6),
    (5, 0, -234.4, 0.0, -0.3, 0.0),
    (5, 1, 363.1, 47.7, 0.6, 0.1),
    (5, 2, 187.8, 208.4, -0.7, 2.5),
    (5, 3, -140.7, -121.3, 0.1, -0.9),
    (5, 4, -151.2, 32.2, 1.2, 3.0),
    (5, 5, 13.7, 99.1, 1.0, 0.5),
    (6, 0, 65.9, 0.0, -0.6, 0.0),
    (6, 1, 65.6, -19.1, -0.4, 0.1),
    (6, 2, 73.0, 25.0, 0.5, -1.8),
    (6, 3, -121.5, 52.7, 1.4, -1.4),
    (6, 4, -36.2, -64.4, -1.4, 0.9),
    (6, 5, 13.5, 9.0, -0.0, 0.1),
    (6, 6, -64.7, 68.1, 0.8, 1.0),
    (7, 0, 80.6, 0.0, -0.1, 0.0),
    (7, 1, -76.8, -51.4, -0.3, 0.5),
    (7, 2, -8.3, -16.8, -0.1, 0.6),
    (7, 3, 56.5, 2.3, 0.7, -0.7),
    (7, 4, 15.8, 23.5, 0.2, -0.2),
    (7, 5, 6.4, -2.2, -0.5, -1.2),
    (7, 6, -7.2, -27.2, -0.8, 0.2),
    (7, 7, 9.8, -1.9, 1.0, 0.3),
    (8, 0, 23.6, 0.0, -0.1, 0.0),
    (8, 1, 9.8, 8.4, 0.1, -0.3),
    (8, 2, -17.5, -15.3, -0.1, 0.7),
    (8, 3, -0.4, 12.8, 0.5, -0.2),
    (8, 4, -21.1, -11.8, -0.1, 0.5),
    (8, 5, 15.3, 14.9, 0.4, -0.3),
    (8, 6, 13.7, 3.6, 0.5, -0.5),
    (8, 7, -16.5, -6.9, 0.0, 0.4),
    (8, 8, -0.3, 2.8, 0.4, 0.1),
    (9, 0, 5.0, 0.0, -0.1, 0.0),
    (9, 1, 8.2, -23.3, -0.2, -0.3),
    (9, 2, 2.9, 11.1, -0.0, 0.2),
    (9, 3, -1.4, 9.8, 0.4, -0.4),
    (9, 4, -1.1, -5.1, -0.3, 0.4),
    (9, 5, -13.3, -6.2, -0.0, 0.1),
    (9, 6, 1.1, 7.8, 0.3, -0.0),
    (9, 7, 8.9, 0.4, -0.0, -0.2),
    (9, 8, -9.3, -1.5, -0.0, 0.5),
    (9, 9, -11.9, 9.7, -0.4, 0.2),
    (10, 0, -1.9, 0.0, 0.0, 0.0),
    (10, 1, -6.2, 3.4, -0.0, -0.0),
    (10, 2, -0.1, -0.2, -0.0, 0.1),
    (10, 3, 1.7, 3.5, 0.2, -0.3),
    (10, 4, -0.9, 4.8, -0.1, 0.1),
    (10, 5, 0.6, -8.6, -0.2, -0.2),
    (10, 6, -0.9, -0.1, -0.0, 0.1),
    (10, 7, 1.9, -4.2, -0.1, -0.0),
    (10, 8, 1.4, -3.4, -0.2, -0.1),
    (10, 9, -2.4, -0.1, -0.1, 0.2),
    (10, 10, -3.9, -8.8, -0.0, -0.0),
    (11, 0, 3.0, 0.0, -0.0, 0.0),
    (11, 1, -1.4, -0.0, -0.1, -0.0),
    (11, 2, -2.5, 2.6, -0.0, 0.1),
    (11, 3, 2.4, -0.5, 0.0, 0.0),
    (11, 4, -0.9, -0.4, -0.0, 0.2),
    (11, 5, 0.3, 0.6, -0.1, -0.0),
    (11, 6, -0.7, -0.2, 0.0, 0.0),
    (11, 7, -0.1, -1.7, -0.0, 0.1),
    (11, 8, 1.4, -1.6, -0.1, -0.0),
    (11, 9, -0.6, -3.0, -0.1, -0.1),
    (11, 10, 0.2, -2.0, -0.1, 0.0),
    (11, 11, 3.1, -2.6, -0.1, -0.0),
    (12, 0, -2.0, 0.0, 0.0, 0.0),
    (12, 1, -0.1, -1.2, -0.0, -0.0),
    (12, 2, 0.5, 0.5, -0.0, 0.0),
    (12, 3, 1.3, 1.3, 0.0, -0.1),
    (12, 4, -1.2, -1.8, -0.0, 0.1),
    (12, 5, 0.7, 0.1, -0.0, -0.0),
    (12, 6, 0.3, 0.7, 0.0, 0.0),
    (12, 7, 0.5, -0.1, -0.0, -0.0),
    (12, 8, -0.2, 0.6, 0.0, 0.1),
    (12, 9, -0.5, 0.2, -0.0, -0.0),
    (12, 10, 0.1, -0.9, -0.0, -0.0),
    (12, 11, -1.1, -0.0, -0.0, 0.0),
    (12, 12, -0.3, 0.5, -0.1, -0.1),
];

pub fn magnetic_model() -> Box<MAGtype_MagneticModel> {
    let n_max = *WMM.iter().map(|(n, _, _, _, _, _)| n).max().unwrap() as i32;
    let len = n_max * (n_max + 1) / 2 + n_max + 1;

    let model = unsafe { crate::sys::MAG_AllocateModelMemory(len) };
    let mut model = unsafe { Box::from_raw(model) };

    model.nMax = n_max;
    model.nMaxSecVar = n_max;

    unsafe {
        *model.Main_Field_Coeff_H = 0.0;
        *model.Main_Field_Coeff_G = 0.0;
        *model.Secular_Var_Coeff_H = 0.0;
        *model.Secular_Var_Coeff_G = 0.0;
    }

    let len = len as usize;
    let main_field_coeff_g =
        unsafe { std::slice::from_raw_parts_mut(model.Main_Field_Coeff_G, len) };
    let secular_var_coeff_g =
        unsafe { std::slice::from_raw_parts_mut(model.Secular_Var_Coeff_G, len) };
    let main_field_coeff_h =
        unsafe { std::slice::from_raw_parts_mut(model.Main_Field_Coeff_H, len) };
    let secular_var_coeff_h =
        unsafe { std::slice::from_raw_parts_mut(model.Secular_Var_Coeff_H, len) };

    for (n, m, gnm, hnm, dgnm, dhnm) in WMM.iter().copied() {
        if m <= n {
            let index = n * (n + 1) / 2 + m;
            main_field_coeff_g[index] = gnm;
            secular_var_coeff_g[index] = dgnm;
            main_field_coeff_h[index] = hnm;
            secular_var_coeff_h[index] = dhnm;
        }
    }

    model
}
