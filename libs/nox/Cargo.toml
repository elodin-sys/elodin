[package]
name = "nox"
version.workspace = true
edition = "2021"
description = "Tensor library that compiles to XLA (like JAX, but for Rust)."
license = "MIT OR Apache-2.0"
repository = "https://github.com/elodin-sys/elodin"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["noxpr", "xla"]
jax = ["pyo3", "pyo3-build-config", "numpy", "noxpr"]
cuda = ["shared"]
noxpr = ["xla", "boxcar", "paste", "itertools", "indent_write"]
xla = ["dep:xla", "lapack-src"]
shared = []
serde = ["dep:serde"]

[dependencies]
typenum = "1.17.0"
num-traits = "0.2.15"
thiserror = "1.0"
seq-macro = "0.3.5"
fn-traits = "0.2"
faer = "0.19.1"
bytemuck.version = "1.14"
dyn-stack = "0.10.0"
inplace_it = "0.3.5"
smallvec.version = "1.11.2"
smallvec.features = ["const_generics", "union"]

# noxpr
boxcar.version = "0.2"
boxcar.optional = true
paste.version = "1.0.14"
paste.optional = true
itertools.version = "0.12.0"
itertools.optional = true
indent_write.version = "2.2.0"
indent_write.optional = true

# noxla - a wrapper around raw xla
xla = { optional = true, workspace = true }

# jax
pyo3.version = "0.21.0"
pyo3.optional = true
numpy.version = "0.21.0"
numpy.optional = true

# debug
approx = "0.5"

# serialize
serde.version = "1"
serde.optional = true

[target.'cfg(not(target_os = "macos"))'.dependencies]
lapack-src = { version = "0.10", features = ["openblas"], optional = true }
openblas-src.version = "0.10"
openblas-src.features = ["system"]
openblas-src.optional = true
[target.'cfg(target_os = "macos")'.dependencies]
lapack-src = { version = "0.10", features = ["accelerate"], optional = true }

[build-dependencies]
which = "6.0.3"
pyo3-build-config.version = "0.21.0"
pyo3-build-config.optional = true
