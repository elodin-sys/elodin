// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: triton.proto

#include "triton.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace jax_triton {
PROTOBUF_CONSTEXPR TritonKernel::TritonKernel(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.kernel_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ptx_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ttir_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.num_warps_)*/0u
  , /*decltype(_impl_.shared_mem_bytes_)*/0u
  , /*decltype(_impl_.compute_capability_)*/0u
  , /*decltype(_impl_.cluster_dim_0_)*/0u
  , /*decltype(_impl_.cluster_dim_1_)*/0u
  , /*decltype(_impl_.cluster_dim_2_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TritonKernelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TritonKernelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TritonKernelDefaultTypeInternal() {}
  union {
    TritonKernel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TritonKernelDefaultTypeInternal _TritonKernel_default_instance_;
PROTOBUF_CONSTEXPR TritonKernelCall_Parameter_Array::TritonKernelCall_Parameter_Array(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bytes_to_zero_)*/uint64_t{0u}
  , /*decltype(_impl_.ptr_divisibility_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TritonKernelCall_Parameter_ArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TritonKernelCall_Parameter_ArrayDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TritonKernelCall_Parameter_ArrayDefaultTypeInternal() {}
  union {
    TritonKernelCall_Parameter_Array _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TritonKernelCall_Parameter_ArrayDefaultTypeInternal _TritonKernelCall_Parameter_Array_default_instance_;
PROTOBUF_CONSTEXPR TritonKernelCall_Parameter::TritonKernelCall_Parameter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct TritonKernelCall_ParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TritonKernelCall_ParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TritonKernelCall_ParameterDefaultTypeInternal() {}
  union {
    TritonKernelCall_Parameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TritonKernelCall_ParameterDefaultTypeInternal _TritonKernelCall_Parameter_default_instance_;
PROTOBUF_CONSTEXPR TritonKernelCall::TritonKernelCall(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameters_)*/{}
  , /*decltype(_impl_.kernel_)*/nullptr
  , /*decltype(_impl_.grid_0_)*/0u
  , /*decltype(_impl_.grid_1_)*/0u
  , /*decltype(_impl_.grid_2_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TritonKernelCallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TritonKernelCallDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TritonKernelCallDefaultTypeInternal() {}
  union {
    TritonKernelCall _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TritonKernelCallDefaultTypeInternal _TritonKernelCall_default_instance_;
PROTOBUF_CONSTEXPR TritonAutotunedKernelCall_Config::TritonAutotunedKernelCall_Config(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.kernel_call_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TritonAutotunedKernelCall_ConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TritonAutotunedKernelCall_ConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TritonAutotunedKernelCall_ConfigDefaultTypeInternal() {}
  union {
    TritonAutotunedKernelCall_Config _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TritonAutotunedKernelCall_ConfigDefaultTypeInternal _TritonAutotunedKernelCall_Config_default_instance_;
PROTOBUF_CONSTEXPR TritonAutotunedKernelCall_InputOutputAlias::TritonAutotunedKernelCall_InputOutputAlias(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.input_buffer_idx_)*/0u
  , /*decltype(_impl_.output_buffer_idx_)*/0u
  , /*decltype(_impl_.buffer_size_bytes_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TritonAutotunedKernelCall_InputOutputAliasDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TritonAutotunedKernelCall_InputOutputAliasDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TritonAutotunedKernelCall_InputOutputAliasDefaultTypeInternal() {}
  union {
    TritonAutotunedKernelCall_InputOutputAlias _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TritonAutotunedKernelCall_InputOutputAliasDefaultTypeInternal _TritonAutotunedKernelCall_InputOutputAlias_default_instance_;
PROTOBUF_CONSTEXPR TritonAutotunedKernelCall::TritonAutotunedKernelCall(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.configs_)*/{}
  , /*decltype(_impl_.input_output_aliases_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TritonAutotunedKernelCallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TritonAutotunedKernelCallDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TritonAutotunedKernelCallDefaultTypeInternal() {}
  union {
    TritonAutotunedKernelCall _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TritonAutotunedKernelCallDefaultTypeInternal _TritonAutotunedKernelCall_default_instance_;
PROTOBUF_CONSTEXPR TritonAnyKernelCall::TritonAnyKernelCall(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metadata_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct TritonAnyKernelCallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TritonAnyKernelCallDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TritonAnyKernelCallDefaultTypeInternal() {}
  union {
    TritonAnyKernelCall _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TritonAnyKernelCallDefaultTypeInternal _TritonAnyKernelCall_default_instance_;
}  // namespace jax_triton
static ::_pb::Metadata file_level_metadata_triton_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_triton_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_triton_2eproto = nullptr;

const uint32_t TableStruct_triton_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.kernel_name_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.num_warps_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.shared_mem_bytes_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.ptx_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.ttir_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.compute_capability_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.cluster_dim_0_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.cluster_dim_1_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernel, _impl_.cluster_dim_2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall_Parameter_Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall_Parameter_Array, _impl_.bytes_to_zero_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall_Parameter_Array, _impl_.ptr_divisibility_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall_Parameter, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall_Parameter, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall, _impl_.kernel_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall, _impl_.grid_0_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall, _impl_.grid_1_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall, _impl_.grid_2_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonKernelCall, _impl_.parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall_Config, _impl_.kernel_call_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall_Config, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall_InputOutputAlias, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall_InputOutputAlias, _impl_.input_buffer_idx_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall_InputOutputAlias, _impl_.output_buffer_idx_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall_InputOutputAlias, _impl_.buffer_size_bytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall, _impl_.configs_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAutotunedKernelCall, _impl_.input_output_aliases_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAnyKernelCall, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAnyKernelCall, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAnyKernelCall, _impl_.metadata_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAnyKernelCall, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::jax_triton::TritonAnyKernelCall, _impl_.value_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::jax_triton::TritonKernel)},
  { 15, -1, -1, sizeof(::jax_triton::TritonKernelCall_Parameter_Array)},
  { 23, -1, -1, sizeof(::jax_triton::TritonKernelCall_Parameter)},
  { 38, -1, -1, sizeof(::jax_triton::TritonKernelCall)},
  { 49, -1, -1, sizeof(::jax_triton::TritonAutotunedKernelCall_Config)},
  { 57, -1, -1, sizeof(::jax_triton::TritonAutotunedKernelCall_InputOutputAlias)},
  { 66, -1, -1, sizeof(::jax_triton::TritonAutotunedKernelCall)},
  { 75, -1, -1, sizeof(::jax_triton::TritonAnyKernelCall)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::jax_triton::_TritonKernel_default_instance_._instance,
  &::jax_triton::_TritonKernelCall_Parameter_Array_default_instance_._instance,
  &::jax_triton::_TritonKernelCall_Parameter_default_instance_._instance,
  &::jax_triton::_TritonKernelCall_default_instance_._instance,
  &::jax_triton::_TritonAutotunedKernelCall_Config_default_instance_._instance,
  &::jax_triton::_TritonAutotunedKernelCall_InputOutputAlias_default_instance_._instance,
  &::jax_triton::_TritonAutotunedKernelCall_default_instance_._instance,
  &::jax_triton::_TritonAnyKernelCall_default_instance_._instance,
};

const char descriptor_table_protodef_triton_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014triton.proto\022\njax_triton\"\314\001\n\014TritonKer"
  "nel\022\023\n\013kernel_name\030\001 \001(\t\022\021\n\tnum_warps\030\002 "
  "\001(\r\022\030\n\020shared_mem_bytes\030\003 \001(\r\022\013\n\003ptx\030\004 \001"
  "(\t\022\014\n\004ttir\030\005 \001(\t\022\032\n\022compute_capability\030\006"
  " \001(\r\022\025\n\rcluster_dim_0\030\007 \001(\r\022\025\n\rcluster_d"
  "im_1\030\010 \001(\r\022\025\n\rcluster_dim_2\030\t \001(\r\"\243\003\n\020Tr"
  "itonKernelCall\022(\n\006kernel\030\001 \001(\0132\030.jax_tri"
  "ton.TritonKernel\022\016\n\006grid_0\030\002 \001(\r\022\016\n\006grid"
  "_1\030\003 \001(\r\022\016\n\006grid_2\030\004 \001(\r\022:\n\nparameters\030\005"
  " \003(\0132&.jax_triton.TritonKernelCall.Param"
  "eter\032\370\001\n\tParameter\022=\n\005array\030\001 \001(\0132,.jax_"
  "triton.TritonKernelCall.Parameter.ArrayH"
  "\000\022\017\n\005bool_\030\002 \001(\010H\000\022\r\n\003i32\030\003 \001(\005H\000\022\r\n\003u32"
  "\030\004 \001(\rH\000\022\r\n\003i64\030\005 \001(\003H\000\022\r\n\003u64\030\006 \001(\004H\000\022\r"
  "\n\003f32\030\007 \001(\002H\000\022\r\n\003f64\030\010 \001(\001H\000\0328\n\005Array\022\025\n"
  "\rbytes_to_zero\030\001 \001(\004\022\030\n\020ptr_divisibility"
  "\030\002 \001(\004B\007\n\005value\"\364\002\n\031TritonAutotunedKerne"
  "lCall\022\014\n\004name\030\001 \001(\t\022=\n\007configs\030\002 \003(\0132,.j"
  "ax_triton.TritonAutotunedKernelCall.Conf"
  "ig\022T\n\024input_output_aliases\030\003 \003(\01326.jax_t"
  "riton.TritonAutotunedKernelCall.InputOut"
  "putAlias\032P\n\006Config\0221\n\013kernel_call\030\001 \001(\0132"
  "\034.jax_triton.TritonKernelCall\022\023\n\013descrip"
  "tion\030\002 \001(\t\032b\n\020InputOutputAlias\022\030\n\020input_"
  "buffer_idx\030\001 \001(\r\022\031\n\021output_buffer_idx\030\002 "
  "\001(\r\022\031\n\021buffer_size_bytes\030\003 \001(\004\"\273\001\n\023Trito"
  "nAnyKernelCall\0223\n\013kernel_call\030\001 \001(\0132\034.ja"
  "x_triton.TritonKernelCallH\000\022F\n\025autotuned"
  "_kernel_call\030\002 \001(\0132%.jax_triton.TritonAu"
  "totunedKernelCallH\000\022\020\n\010metadata\030\003 \001(\014\022\014\n"
  "\004name\030\004 \001(\tB\007\n\005valueb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_triton_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_triton_2eproto = {
    false, false, 1228, descriptor_table_protodef_triton_2eproto,
    "triton.proto",
    &descriptor_table_triton_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_triton_2eproto::offsets,
    file_level_metadata_triton_2eproto, file_level_enum_descriptors_triton_2eproto,
    file_level_service_descriptors_triton_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_triton_2eproto_getter() {
  return &descriptor_table_triton_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_triton_2eproto(&descriptor_table_triton_2eproto);
namespace jax_triton {

// ===================================================================

class TritonKernel::_Internal {
 public:
};

TritonKernel::TritonKernel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:jax_triton.TritonKernel)
}
TritonKernel::TritonKernel(const TritonKernel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TritonKernel* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.kernel_name_){}
    , decltype(_impl_.ptx_){}
    , decltype(_impl_.ttir_){}
    , decltype(_impl_.num_warps_){}
    , decltype(_impl_.shared_mem_bytes_){}
    , decltype(_impl_.compute_capability_){}
    , decltype(_impl_.cluster_dim_0_){}
    , decltype(_impl_.cluster_dim_1_){}
    , decltype(_impl_.cluster_dim_2_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.kernel_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.kernel_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_kernel_name().empty()) {
    _this->_impl_.kernel_name_.Set(from._internal_kernel_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ptx_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ptx_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ptx().empty()) {
    _this->_impl_.ptx_.Set(from._internal_ptx(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ttir_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ttir_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ttir().empty()) {
    _this->_impl_.ttir_.Set(from._internal_ttir(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.num_warps_, &from._impl_.num_warps_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.cluster_dim_2_) -
    reinterpret_cast<char*>(&_impl_.num_warps_)) + sizeof(_impl_.cluster_dim_2_));
  // @@protoc_insertion_point(copy_constructor:jax_triton.TritonKernel)
}

inline void TritonKernel::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.kernel_name_){}
    , decltype(_impl_.ptx_){}
    , decltype(_impl_.ttir_){}
    , decltype(_impl_.num_warps_){0u}
    , decltype(_impl_.shared_mem_bytes_){0u}
    , decltype(_impl_.compute_capability_){0u}
    , decltype(_impl_.cluster_dim_0_){0u}
    , decltype(_impl_.cluster_dim_1_){0u}
    , decltype(_impl_.cluster_dim_2_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.kernel_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.kernel_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ptx_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ptx_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ttir_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ttir_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TritonKernel::~TritonKernel() {
  // @@protoc_insertion_point(destructor:jax_triton.TritonKernel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TritonKernel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.kernel_name_.Destroy();
  _impl_.ptx_.Destroy();
  _impl_.ttir_.Destroy();
}

void TritonKernel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TritonKernel::Clear() {
// @@protoc_insertion_point(message_clear_start:jax_triton.TritonKernel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kernel_name_.ClearToEmpty();
  _impl_.ptx_.ClearToEmpty();
  _impl_.ttir_.ClearToEmpty();
  ::memset(&_impl_.num_warps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.cluster_dim_2_) -
      reinterpret_cast<char*>(&_impl_.num_warps_)) + sizeof(_impl_.cluster_dim_2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TritonKernel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string kernel_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_kernel_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "jax_triton.TritonKernel.kernel_name"));
        } else
          goto handle_unusual;
        continue;
      // uint32 num_warps = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_warps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 shared_mem_bytes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.shared_mem_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ptx = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_ptx();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "jax_triton.TritonKernel.ptx"));
        } else
          goto handle_unusual;
        continue;
      // string ttir = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_ttir();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "jax_triton.TritonKernel.ttir"));
        } else
          goto handle_unusual;
        continue;
      // uint32 compute_capability = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.compute_capability_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 cluster_dim_0 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.cluster_dim_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 cluster_dim_1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.cluster_dim_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 cluster_dim_2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.cluster_dim_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TritonKernel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jax_triton.TritonKernel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string kernel_name = 1;
  if (!this->_internal_kernel_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_kernel_name().data(), static_cast<int>(this->_internal_kernel_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jax_triton.TritonKernel.kernel_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_kernel_name(), target);
  }

  // uint32 num_warps = 2;
  if (this->_internal_num_warps() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_num_warps(), target);
  }

  // uint32 shared_mem_bytes = 3;
  if (this->_internal_shared_mem_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_shared_mem_bytes(), target);
  }

  // string ptx = 4;
  if (!this->_internal_ptx().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ptx().data(), static_cast<int>(this->_internal_ptx().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jax_triton.TritonKernel.ptx");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_ptx(), target);
  }

  // string ttir = 5;
  if (!this->_internal_ttir().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ttir().data(), static_cast<int>(this->_internal_ttir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jax_triton.TritonKernel.ttir");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_ttir(), target);
  }

  // uint32 compute_capability = 6;
  if (this->_internal_compute_capability() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_compute_capability(), target);
  }

  // uint32 cluster_dim_0 = 7;
  if (this->_internal_cluster_dim_0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_cluster_dim_0(), target);
  }

  // uint32 cluster_dim_1 = 8;
  if (this->_internal_cluster_dim_1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_cluster_dim_1(), target);
  }

  // uint32 cluster_dim_2 = 9;
  if (this->_internal_cluster_dim_2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(9, this->_internal_cluster_dim_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jax_triton.TritonKernel)
  return target;
}

size_t TritonKernel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jax_triton.TritonKernel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string kernel_name = 1;
  if (!this->_internal_kernel_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_kernel_name());
  }

  // string ptx = 4;
  if (!this->_internal_ptx().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ptx());
  }

  // string ttir = 5;
  if (!this->_internal_ttir().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ttir());
  }

  // uint32 num_warps = 2;
  if (this->_internal_num_warps() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_warps());
  }

  // uint32 shared_mem_bytes = 3;
  if (this->_internal_shared_mem_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_shared_mem_bytes());
  }

  // uint32 compute_capability = 6;
  if (this->_internal_compute_capability() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_compute_capability());
  }

  // uint32 cluster_dim_0 = 7;
  if (this->_internal_cluster_dim_0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cluster_dim_0());
  }

  // uint32 cluster_dim_1 = 8;
  if (this->_internal_cluster_dim_1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cluster_dim_1());
  }

  // uint32 cluster_dim_2 = 9;
  if (this->_internal_cluster_dim_2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cluster_dim_2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TritonKernel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TritonKernel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TritonKernel::GetClassData() const { return &_class_data_; }


void TritonKernel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TritonKernel*>(&to_msg);
  auto& from = static_cast<const TritonKernel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jax_triton.TritonKernel)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_kernel_name().empty()) {
    _this->_internal_set_kernel_name(from._internal_kernel_name());
  }
  if (!from._internal_ptx().empty()) {
    _this->_internal_set_ptx(from._internal_ptx());
  }
  if (!from._internal_ttir().empty()) {
    _this->_internal_set_ttir(from._internal_ttir());
  }
  if (from._internal_num_warps() != 0) {
    _this->_internal_set_num_warps(from._internal_num_warps());
  }
  if (from._internal_shared_mem_bytes() != 0) {
    _this->_internal_set_shared_mem_bytes(from._internal_shared_mem_bytes());
  }
  if (from._internal_compute_capability() != 0) {
    _this->_internal_set_compute_capability(from._internal_compute_capability());
  }
  if (from._internal_cluster_dim_0() != 0) {
    _this->_internal_set_cluster_dim_0(from._internal_cluster_dim_0());
  }
  if (from._internal_cluster_dim_1() != 0) {
    _this->_internal_set_cluster_dim_1(from._internal_cluster_dim_1());
  }
  if (from._internal_cluster_dim_2() != 0) {
    _this->_internal_set_cluster_dim_2(from._internal_cluster_dim_2());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TritonKernel::CopyFrom(const TritonKernel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jax_triton.TritonKernel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TritonKernel::IsInitialized() const {
  return true;
}

void TritonKernel::InternalSwap(TritonKernel* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.kernel_name_, lhs_arena,
      &other->_impl_.kernel_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ptx_, lhs_arena,
      &other->_impl_.ptx_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ttir_, lhs_arena,
      &other->_impl_.ttir_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TritonKernel, _impl_.cluster_dim_2_)
      + sizeof(TritonKernel::_impl_.cluster_dim_2_)
      - PROTOBUF_FIELD_OFFSET(TritonKernel, _impl_.num_warps_)>(
          reinterpret_cast<char*>(&_impl_.num_warps_),
          reinterpret_cast<char*>(&other->_impl_.num_warps_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TritonKernel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_triton_2eproto_getter, &descriptor_table_triton_2eproto_once,
      file_level_metadata_triton_2eproto[0]);
}

// ===================================================================

class TritonKernelCall_Parameter_Array::_Internal {
 public:
};

TritonKernelCall_Parameter_Array::TritonKernelCall_Parameter_Array(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:jax_triton.TritonKernelCall.Parameter.Array)
}
TritonKernelCall_Parameter_Array::TritonKernelCall_Parameter_Array(const TritonKernelCall_Parameter_Array& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TritonKernelCall_Parameter_Array* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bytes_to_zero_){}
    , decltype(_impl_.ptr_divisibility_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.bytes_to_zero_, &from._impl_.bytes_to_zero_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ptr_divisibility_) -
    reinterpret_cast<char*>(&_impl_.bytes_to_zero_)) + sizeof(_impl_.ptr_divisibility_));
  // @@protoc_insertion_point(copy_constructor:jax_triton.TritonKernelCall.Parameter.Array)
}

inline void TritonKernelCall_Parameter_Array::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bytes_to_zero_){uint64_t{0u}}
    , decltype(_impl_.ptr_divisibility_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TritonKernelCall_Parameter_Array::~TritonKernelCall_Parameter_Array() {
  // @@protoc_insertion_point(destructor:jax_triton.TritonKernelCall.Parameter.Array)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TritonKernelCall_Parameter_Array::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TritonKernelCall_Parameter_Array::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TritonKernelCall_Parameter_Array::Clear() {
// @@protoc_insertion_point(message_clear_start:jax_triton.TritonKernelCall.Parameter.Array)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.bytes_to_zero_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ptr_divisibility_) -
      reinterpret_cast<char*>(&_impl_.bytes_to_zero_)) + sizeof(_impl_.ptr_divisibility_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TritonKernelCall_Parameter_Array::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 bytes_to_zero = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bytes_to_zero_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 ptr_divisibility = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.ptr_divisibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TritonKernelCall_Parameter_Array::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jax_triton.TritonKernelCall.Parameter.Array)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 bytes_to_zero = 1;
  if (this->_internal_bytes_to_zero() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_bytes_to_zero(), target);
  }

  // uint64 ptr_divisibility = 2;
  if (this->_internal_ptr_divisibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_ptr_divisibility(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jax_triton.TritonKernelCall.Parameter.Array)
  return target;
}

size_t TritonKernelCall_Parameter_Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jax_triton.TritonKernelCall.Parameter.Array)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 bytes_to_zero = 1;
  if (this->_internal_bytes_to_zero() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_bytes_to_zero());
  }

  // uint64 ptr_divisibility = 2;
  if (this->_internal_ptr_divisibility() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_ptr_divisibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TritonKernelCall_Parameter_Array::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TritonKernelCall_Parameter_Array::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TritonKernelCall_Parameter_Array::GetClassData() const { return &_class_data_; }


void TritonKernelCall_Parameter_Array::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TritonKernelCall_Parameter_Array*>(&to_msg);
  auto& from = static_cast<const TritonKernelCall_Parameter_Array&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jax_triton.TritonKernelCall.Parameter.Array)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bytes_to_zero() != 0) {
    _this->_internal_set_bytes_to_zero(from._internal_bytes_to_zero());
  }
  if (from._internal_ptr_divisibility() != 0) {
    _this->_internal_set_ptr_divisibility(from._internal_ptr_divisibility());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TritonKernelCall_Parameter_Array::CopyFrom(const TritonKernelCall_Parameter_Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jax_triton.TritonKernelCall.Parameter.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TritonKernelCall_Parameter_Array::IsInitialized() const {
  return true;
}

void TritonKernelCall_Parameter_Array::InternalSwap(TritonKernelCall_Parameter_Array* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TritonKernelCall_Parameter_Array, _impl_.ptr_divisibility_)
      + sizeof(TritonKernelCall_Parameter_Array::_impl_.ptr_divisibility_)
      - PROTOBUF_FIELD_OFFSET(TritonKernelCall_Parameter_Array, _impl_.bytes_to_zero_)>(
          reinterpret_cast<char*>(&_impl_.bytes_to_zero_),
          reinterpret_cast<char*>(&other->_impl_.bytes_to_zero_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TritonKernelCall_Parameter_Array::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_triton_2eproto_getter, &descriptor_table_triton_2eproto_once,
      file_level_metadata_triton_2eproto[1]);
}

// ===================================================================

class TritonKernelCall_Parameter::_Internal {
 public:
  static const ::jax_triton::TritonKernelCall_Parameter_Array& array(const TritonKernelCall_Parameter* msg);
};

const ::jax_triton::TritonKernelCall_Parameter_Array&
TritonKernelCall_Parameter::_Internal::array(const TritonKernelCall_Parameter* msg) {
  return *msg->_impl_.value_.array_;
}
void TritonKernelCall_Parameter::set_allocated_array(::jax_triton::TritonKernelCall_Parameter_Array* array) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (array) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(array);
    if (message_arena != submessage_arena) {
      array = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, array, submessage_arena);
    }
    set_has_array();
    _impl_.value_.array_ = array;
  }
  // @@protoc_insertion_point(field_set_allocated:jax_triton.TritonKernelCall.Parameter.array)
}
TritonKernelCall_Parameter::TritonKernelCall_Parameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:jax_triton.TritonKernelCall.Parameter)
}
TritonKernelCall_Parameter::TritonKernelCall_Parameter(const TritonKernelCall_Parameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TritonKernelCall_Parameter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kArray: {
      _this->_internal_mutable_array()->::jax_triton::TritonKernelCall_Parameter_Array::MergeFrom(
          from._internal_array());
      break;
    }
    case kBool: {
      _this->_internal_set_bool_(from._internal_bool_());
      break;
    }
    case kI32: {
      _this->_internal_set_i32(from._internal_i32());
      break;
    }
    case kU32: {
      _this->_internal_set_u32(from._internal_u32());
      break;
    }
    case kI64: {
      _this->_internal_set_i64(from._internal_i64());
      break;
    }
    case kU64: {
      _this->_internal_set_u64(from._internal_u64());
      break;
    }
    case kF32: {
      _this->_internal_set_f32(from._internal_f32());
      break;
    }
    case kF64: {
      _this->_internal_set_f64(from._internal_f64());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:jax_triton.TritonKernelCall.Parameter)
}

inline void TritonKernelCall_Parameter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_value();
}

TritonKernelCall_Parameter::~TritonKernelCall_Parameter() {
  // @@protoc_insertion_point(destructor:jax_triton.TritonKernelCall.Parameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TritonKernelCall_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void TritonKernelCall_Parameter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TritonKernelCall_Parameter::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:jax_triton.TritonKernelCall.Parameter)
  switch (value_case()) {
    case kArray: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.array_;
      }
      break;
    }
    case kBool: {
      // No need to clear
      break;
    }
    case kI32: {
      // No need to clear
      break;
    }
    case kU32: {
      // No need to clear
      break;
    }
    case kI64: {
      // No need to clear
      break;
    }
    case kU64: {
      // No need to clear
      break;
    }
    case kF32: {
      // No need to clear
      break;
    }
    case kF64: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void TritonKernelCall_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:jax_triton.TritonKernelCall.Parameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TritonKernelCall_Parameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .jax_triton.TritonKernelCall.Parameter.Array array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bool_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_bool_(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 i32 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _internal_set_i32(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 u32 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _internal_set_u32(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 i64 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _internal_set_i64(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 u64 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _internal_set_u64(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float f32 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _internal_set_f32(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // double f64 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 65)) {
          _internal_set_f64(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TritonKernelCall_Parameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jax_triton.TritonKernelCall.Parameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .jax_triton.TritonKernelCall.Parameter.Array array = 1;
  if (_internal_has_array()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::array(this),
        _Internal::array(this).GetCachedSize(), target, stream);
  }

  // bool bool_ = 2;
  if (_internal_has_bool_()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_bool_(), target);
  }

  // int32 i32 = 3;
  if (_internal_has_i32()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_i32(), target);
  }

  // uint32 u32 = 4;
  if (_internal_has_u32()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_u32(), target);
  }

  // int64 i64 = 5;
  if (_internal_has_i64()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_i64(), target);
  }

  // uint64 u64 = 6;
  if (_internal_has_u64()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_u64(), target);
  }

  // float f32 = 7;
  if (_internal_has_f32()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_f32(), target);
  }

  // double f64 = 8;
  if (_internal_has_f64()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(8, this->_internal_f64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jax_triton.TritonKernelCall.Parameter)
  return target;
}

size_t TritonKernelCall_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jax_triton.TritonKernelCall.Parameter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // .jax_triton.TritonKernelCall.Parameter.Array array = 1;
    case kArray: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.array_);
      break;
    }
    // bool bool_ = 2;
    case kBool: {
      total_size += 1 + 1;
      break;
    }
    // int32 i32 = 3;
    case kI32: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_i32());
      break;
    }
    // uint32 u32 = 4;
    case kU32: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_u32());
      break;
    }
    // int64 i64 = 5;
    case kI64: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_i64());
      break;
    }
    // uint64 u64 = 6;
    case kU64: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_u64());
      break;
    }
    // float f32 = 7;
    case kF32: {
      total_size += 1 + 4;
      break;
    }
    // double f64 = 8;
    case kF64: {
      total_size += 1 + 8;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TritonKernelCall_Parameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TritonKernelCall_Parameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TritonKernelCall_Parameter::GetClassData() const { return &_class_data_; }


void TritonKernelCall_Parameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TritonKernelCall_Parameter*>(&to_msg);
  auto& from = static_cast<const TritonKernelCall_Parameter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jax_triton.TritonKernelCall.Parameter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kArray: {
      _this->_internal_mutable_array()->::jax_triton::TritonKernelCall_Parameter_Array::MergeFrom(
          from._internal_array());
      break;
    }
    case kBool: {
      _this->_internal_set_bool_(from._internal_bool_());
      break;
    }
    case kI32: {
      _this->_internal_set_i32(from._internal_i32());
      break;
    }
    case kU32: {
      _this->_internal_set_u32(from._internal_u32());
      break;
    }
    case kI64: {
      _this->_internal_set_i64(from._internal_i64());
      break;
    }
    case kU64: {
      _this->_internal_set_u64(from._internal_u64());
      break;
    }
    case kF32: {
      _this->_internal_set_f32(from._internal_f32());
      break;
    }
    case kF64: {
      _this->_internal_set_f64(from._internal_f64());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TritonKernelCall_Parameter::CopyFrom(const TritonKernelCall_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jax_triton.TritonKernelCall.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TritonKernelCall_Parameter::IsInitialized() const {
  return true;
}

void TritonKernelCall_Parameter::InternalSwap(TritonKernelCall_Parameter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TritonKernelCall_Parameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_triton_2eproto_getter, &descriptor_table_triton_2eproto_once,
      file_level_metadata_triton_2eproto[2]);
}

// ===================================================================

class TritonKernelCall::_Internal {
 public:
  static const ::jax_triton::TritonKernel& kernel(const TritonKernelCall* msg);
};

const ::jax_triton::TritonKernel&
TritonKernelCall::_Internal::kernel(const TritonKernelCall* msg) {
  return *msg->_impl_.kernel_;
}
TritonKernelCall::TritonKernelCall(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:jax_triton.TritonKernelCall)
}
TritonKernelCall::TritonKernelCall(const TritonKernelCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TritonKernelCall* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parameters_){from._impl_.parameters_}
    , decltype(_impl_.kernel_){nullptr}
    , decltype(_impl_.grid_0_){}
    , decltype(_impl_.grid_1_){}
    , decltype(_impl_.grid_2_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_kernel()) {
    _this->_impl_.kernel_ = new ::jax_triton::TritonKernel(*from._impl_.kernel_);
  }
  ::memcpy(&_impl_.grid_0_, &from._impl_.grid_0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.grid_2_) -
    reinterpret_cast<char*>(&_impl_.grid_0_)) + sizeof(_impl_.grid_2_));
  // @@protoc_insertion_point(copy_constructor:jax_triton.TritonKernelCall)
}

inline void TritonKernelCall::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parameters_){arena}
    , decltype(_impl_.kernel_){nullptr}
    , decltype(_impl_.grid_0_){0u}
    , decltype(_impl_.grid_1_){0u}
    , decltype(_impl_.grid_2_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TritonKernelCall::~TritonKernelCall() {
  // @@protoc_insertion_point(destructor:jax_triton.TritonKernelCall)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TritonKernelCall::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameters_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.kernel_;
}

void TritonKernelCall::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TritonKernelCall::Clear() {
// @@protoc_insertion_point(message_clear_start:jax_triton.TritonKernelCall)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.kernel_ != nullptr) {
    delete _impl_.kernel_;
  }
  _impl_.kernel_ = nullptr;
  ::memset(&_impl_.grid_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.grid_2_) -
      reinterpret_cast<char*>(&_impl_.grid_0_)) + sizeof(_impl_.grid_2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TritonKernelCall::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .jax_triton.TritonKernel kernel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_kernel(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 grid_0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.grid_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 grid_1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.grid_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 grid_2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.grid_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .jax_triton.TritonKernelCall.Parameter parameters = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parameters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TritonKernelCall::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jax_triton.TritonKernelCall)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .jax_triton.TritonKernel kernel = 1;
  if (this->_internal_has_kernel()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::kernel(this),
        _Internal::kernel(this).GetCachedSize(), target, stream);
  }

  // uint32 grid_0 = 2;
  if (this->_internal_grid_0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_grid_0(), target);
  }

  // uint32 grid_1 = 3;
  if (this->_internal_grid_1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_grid_1(), target);
  }

  // uint32 grid_2 = 4;
  if (this->_internal_grid_2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_grid_2(), target);
  }

  // repeated .jax_triton.TritonKernelCall.Parameter parameters = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parameters_size()); i < n; i++) {
    const auto& repfield = this->_internal_parameters(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jax_triton.TritonKernelCall)
  return target;
}

size_t TritonKernelCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jax_triton.TritonKernelCall)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jax_triton.TritonKernelCall.Parameter parameters = 5;
  total_size += 1UL * this->_internal_parameters_size();
  for (const auto& msg : this->_impl_.parameters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .jax_triton.TritonKernel kernel = 1;
  if (this->_internal_has_kernel()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.kernel_);
  }

  // uint32 grid_0 = 2;
  if (this->_internal_grid_0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_grid_0());
  }

  // uint32 grid_1 = 3;
  if (this->_internal_grid_1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_grid_1());
  }

  // uint32 grid_2 = 4;
  if (this->_internal_grid_2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_grid_2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TritonKernelCall::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TritonKernelCall::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TritonKernelCall::GetClassData() const { return &_class_data_; }


void TritonKernelCall::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TritonKernelCall*>(&to_msg);
  auto& from = static_cast<const TritonKernelCall&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jax_triton.TritonKernelCall)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (from._internal_has_kernel()) {
    _this->_internal_mutable_kernel()->::jax_triton::TritonKernel::MergeFrom(
        from._internal_kernel());
  }
  if (from._internal_grid_0() != 0) {
    _this->_internal_set_grid_0(from._internal_grid_0());
  }
  if (from._internal_grid_1() != 0) {
    _this->_internal_set_grid_1(from._internal_grid_1());
  }
  if (from._internal_grid_2() != 0) {
    _this->_internal_set_grid_2(from._internal_grid_2());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TritonKernelCall::CopyFrom(const TritonKernelCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jax_triton.TritonKernelCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TritonKernelCall::IsInitialized() const {
  return true;
}

void TritonKernelCall::InternalSwap(TritonKernelCall* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TritonKernelCall, _impl_.grid_2_)
      + sizeof(TritonKernelCall::_impl_.grid_2_)
      - PROTOBUF_FIELD_OFFSET(TritonKernelCall, _impl_.kernel_)>(
          reinterpret_cast<char*>(&_impl_.kernel_),
          reinterpret_cast<char*>(&other->_impl_.kernel_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TritonKernelCall::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_triton_2eproto_getter, &descriptor_table_triton_2eproto_once,
      file_level_metadata_triton_2eproto[3]);
}

// ===================================================================

class TritonAutotunedKernelCall_Config::_Internal {
 public:
  static const ::jax_triton::TritonKernelCall& kernel_call(const TritonAutotunedKernelCall_Config* msg);
};

const ::jax_triton::TritonKernelCall&
TritonAutotunedKernelCall_Config::_Internal::kernel_call(const TritonAutotunedKernelCall_Config* msg) {
  return *msg->_impl_.kernel_call_;
}
TritonAutotunedKernelCall_Config::TritonAutotunedKernelCall_Config(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:jax_triton.TritonAutotunedKernelCall.Config)
}
TritonAutotunedKernelCall_Config::TritonAutotunedKernelCall_Config(const TritonAutotunedKernelCall_Config& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TritonAutotunedKernelCall_Config* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.description_){}
    , decltype(_impl_.kernel_call_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_kernel_call()) {
    _this->_impl_.kernel_call_ = new ::jax_triton::TritonKernelCall(*from._impl_.kernel_call_);
  }
  // @@protoc_insertion_point(copy_constructor:jax_triton.TritonAutotunedKernelCall.Config)
}

inline void TritonAutotunedKernelCall_Config::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.description_){}
    , decltype(_impl_.kernel_call_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TritonAutotunedKernelCall_Config::~TritonAutotunedKernelCall_Config() {
  // @@protoc_insertion_point(destructor:jax_triton.TritonAutotunedKernelCall.Config)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TritonAutotunedKernelCall_Config::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.kernel_call_;
}

void TritonAutotunedKernelCall_Config::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TritonAutotunedKernelCall_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:jax_triton.TritonAutotunedKernelCall.Config)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.kernel_call_ != nullptr) {
    delete _impl_.kernel_call_;
  }
  _impl_.kernel_call_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TritonAutotunedKernelCall_Config::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .jax_triton.TritonKernelCall kernel_call = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_kernel_call(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "jax_triton.TritonAutotunedKernelCall.Config.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TritonAutotunedKernelCall_Config::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jax_triton.TritonAutotunedKernelCall.Config)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .jax_triton.TritonKernelCall kernel_call = 1;
  if (this->_internal_has_kernel_call()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::kernel_call(this),
        _Internal::kernel_call(this).GetCachedSize(), target, stream);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jax_triton.TritonAutotunedKernelCall.Config.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jax_triton.TritonAutotunedKernelCall.Config)
  return target;
}

size_t TritonAutotunedKernelCall_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jax_triton.TritonAutotunedKernelCall.Config)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .jax_triton.TritonKernelCall kernel_call = 1;
  if (this->_internal_has_kernel_call()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.kernel_call_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TritonAutotunedKernelCall_Config::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TritonAutotunedKernelCall_Config::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TritonAutotunedKernelCall_Config::GetClassData() const { return &_class_data_; }


void TritonAutotunedKernelCall_Config::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TritonAutotunedKernelCall_Config*>(&to_msg);
  auto& from = static_cast<const TritonAutotunedKernelCall_Config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jax_triton.TritonAutotunedKernelCall.Config)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_has_kernel_call()) {
    _this->_internal_mutable_kernel_call()->::jax_triton::TritonKernelCall::MergeFrom(
        from._internal_kernel_call());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TritonAutotunedKernelCall_Config::CopyFrom(const TritonAutotunedKernelCall_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jax_triton.TritonAutotunedKernelCall.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TritonAutotunedKernelCall_Config::IsInitialized() const {
  return true;
}

void TritonAutotunedKernelCall_Config::InternalSwap(TritonAutotunedKernelCall_Config* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  swap(_impl_.kernel_call_, other->_impl_.kernel_call_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TritonAutotunedKernelCall_Config::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_triton_2eproto_getter, &descriptor_table_triton_2eproto_once,
      file_level_metadata_triton_2eproto[4]);
}

// ===================================================================

class TritonAutotunedKernelCall_InputOutputAlias::_Internal {
 public:
};

TritonAutotunedKernelCall_InputOutputAlias::TritonAutotunedKernelCall_InputOutputAlias(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
}
TritonAutotunedKernelCall_InputOutputAlias::TritonAutotunedKernelCall_InputOutputAlias(const TritonAutotunedKernelCall_InputOutputAlias& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TritonAutotunedKernelCall_InputOutputAlias* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.input_buffer_idx_){}
    , decltype(_impl_.output_buffer_idx_){}
    , decltype(_impl_.buffer_size_bytes_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.input_buffer_idx_, &from._impl_.input_buffer_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.buffer_size_bytes_) -
    reinterpret_cast<char*>(&_impl_.input_buffer_idx_)) + sizeof(_impl_.buffer_size_bytes_));
  // @@protoc_insertion_point(copy_constructor:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
}

inline void TritonAutotunedKernelCall_InputOutputAlias::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.input_buffer_idx_){0u}
    , decltype(_impl_.output_buffer_idx_){0u}
    , decltype(_impl_.buffer_size_bytes_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TritonAutotunedKernelCall_InputOutputAlias::~TritonAutotunedKernelCall_InputOutputAlias() {
  // @@protoc_insertion_point(destructor:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TritonAutotunedKernelCall_InputOutputAlias::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TritonAutotunedKernelCall_InputOutputAlias::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TritonAutotunedKernelCall_InputOutputAlias::Clear() {
// @@protoc_insertion_point(message_clear_start:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.input_buffer_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.buffer_size_bytes_) -
      reinterpret_cast<char*>(&_impl_.input_buffer_idx_)) + sizeof(_impl_.buffer_size_bytes_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TritonAutotunedKernelCall_InputOutputAlias::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 input_buffer_idx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.input_buffer_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 output_buffer_idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.output_buffer_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 buffer_size_bytes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.buffer_size_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TritonAutotunedKernelCall_InputOutputAlias::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 input_buffer_idx = 1;
  if (this->_internal_input_buffer_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_input_buffer_idx(), target);
  }

  // uint32 output_buffer_idx = 2;
  if (this->_internal_output_buffer_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_output_buffer_idx(), target);
  }

  // uint64 buffer_size_bytes = 3;
  if (this->_internal_buffer_size_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_buffer_size_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
  return target;
}

size_t TritonAutotunedKernelCall_InputOutputAlias::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 input_buffer_idx = 1;
  if (this->_internal_input_buffer_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_input_buffer_idx());
  }

  // uint32 output_buffer_idx = 2;
  if (this->_internal_output_buffer_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_output_buffer_idx());
  }

  // uint64 buffer_size_bytes = 3;
  if (this->_internal_buffer_size_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_buffer_size_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TritonAutotunedKernelCall_InputOutputAlias::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TritonAutotunedKernelCall_InputOutputAlias::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TritonAutotunedKernelCall_InputOutputAlias::GetClassData() const { return &_class_data_; }


void TritonAutotunedKernelCall_InputOutputAlias::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TritonAutotunedKernelCall_InputOutputAlias*>(&to_msg);
  auto& from = static_cast<const TritonAutotunedKernelCall_InputOutputAlias&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_input_buffer_idx() != 0) {
    _this->_internal_set_input_buffer_idx(from._internal_input_buffer_idx());
  }
  if (from._internal_output_buffer_idx() != 0) {
    _this->_internal_set_output_buffer_idx(from._internal_output_buffer_idx());
  }
  if (from._internal_buffer_size_bytes() != 0) {
    _this->_internal_set_buffer_size_bytes(from._internal_buffer_size_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TritonAutotunedKernelCall_InputOutputAlias::CopyFrom(const TritonAutotunedKernelCall_InputOutputAlias& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jax_triton.TritonAutotunedKernelCall.InputOutputAlias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TritonAutotunedKernelCall_InputOutputAlias::IsInitialized() const {
  return true;
}

void TritonAutotunedKernelCall_InputOutputAlias::InternalSwap(TritonAutotunedKernelCall_InputOutputAlias* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TritonAutotunedKernelCall_InputOutputAlias, _impl_.buffer_size_bytes_)
      + sizeof(TritonAutotunedKernelCall_InputOutputAlias::_impl_.buffer_size_bytes_)
      - PROTOBUF_FIELD_OFFSET(TritonAutotunedKernelCall_InputOutputAlias, _impl_.input_buffer_idx_)>(
          reinterpret_cast<char*>(&_impl_.input_buffer_idx_),
          reinterpret_cast<char*>(&other->_impl_.input_buffer_idx_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TritonAutotunedKernelCall_InputOutputAlias::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_triton_2eproto_getter, &descriptor_table_triton_2eproto_once,
      file_level_metadata_triton_2eproto[5]);
}

// ===================================================================

class TritonAutotunedKernelCall::_Internal {
 public:
};

TritonAutotunedKernelCall::TritonAutotunedKernelCall(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:jax_triton.TritonAutotunedKernelCall)
}
TritonAutotunedKernelCall::TritonAutotunedKernelCall(const TritonAutotunedKernelCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TritonAutotunedKernelCall* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.configs_){from._impl_.configs_}
    , decltype(_impl_.input_output_aliases_){from._impl_.input_output_aliases_}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:jax_triton.TritonAutotunedKernelCall)
}

inline void TritonAutotunedKernelCall::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.configs_){arena}
    , decltype(_impl_.input_output_aliases_){arena}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TritonAutotunedKernelCall::~TritonAutotunedKernelCall() {
  // @@protoc_insertion_point(destructor:jax_triton.TritonAutotunedKernelCall)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TritonAutotunedKernelCall::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.configs_.~RepeatedPtrField();
  _impl_.input_output_aliases_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void TritonAutotunedKernelCall::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TritonAutotunedKernelCall::Clear() {
// @@protoc_insertion_point(message_clear_start:jax_triton.TritonAutotunedKernelCall)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.configs_.Clear();
  _impl_.input_output_aliases_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TritonAutotunedKernelCall::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "jax_triton.TritonAutotunedKernelCall.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .jax_triton.TritonAutotunedKernelCall.Config configs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .jax_triton.TritonAutotunedKernelCall.InputOutputAlias input_output_aliases = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_input_output_aliases(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TritonAutotunedKernelCall::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jax_triton.TritonAutotunedKernelCall)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jax_triton.TritonAutotunedKernelCall.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .jax_triton.TritonAutotunedKernelCall.Config configs = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_configs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .jax_triton.TritonAutotunedKernelCall.InputOutputAlias input_output_aliases = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_input_output_aliases_size()); i < n; i++) {
    const auto& repfield = this->_internal_input_output_aliases(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jax_triton.TritonAutotunedKernelCall)
  return target;
}

size_t TritonAutotunedKernelCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jax_triton.TritonAutotunedKernelCall)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jax_triton.TritonAutotunedKernelCall.Config configs = 2;
  total_size += 1UL * this->_internal_configs_size();
  for (const auto& msg : this->_impl_.configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .jax_triton.TritonAutotunedKernelCall.InputOutputAlias input_output_aliases = 3;
  total_size += 1UL * this->_internal_input_output_aliases_size();
  for (const auto& msg : this->_impl_.input_output_aliases_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TritonAutotunedKernelCall::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TritonAutotunedKernelCall::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TritonAutotunedKernelCall::GetClassData() const { return &_class_data_; }


void TritonAutotunedKernelCall::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TritonAutotunedKernelCall*>(&to_msg);
  auto& from = static_cast<const TritonAutotunedKernelCall&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jax_triton.TritonAutotunedKernelCall)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.configs_.MergeFrom(from._impl_.configs_);
  _this->_impl_.input_output_aliases_.MergeFrom(from._impl_.input_output_aliases_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TritonAutotunedKernelCall::CopyFrom(const TritonAutotunedKernelCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jax_triton.TritonAutotunedKernelCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TritonAutotunedKernelCall::IsInitialized() const {
  return true;
}

void TritonAutotunedKernelCall::InternalSwap(TritonAutotunedKernelCall* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.configs_.InternalSwap(&other->_impl_.configs_);
  _impl_.input_output_aliases_.InternalSwap(&other->_impl_.input_output_aliases_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TritonAutotunedKernelCall::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_triton_2eproto_getter, &descriptor_table_triton_2eproto_once,
      file_level_metadata_triton_2eproto[6]);
}

// ===================================================================

class TritonAnyKernelCall::_Internal {
 public:
  static const ::jax_triton::TritonKernelCall& kernel_call(const TritonAnyKernelCall* msg);
  static const ::jax_triton::TritonAutotunedKernelCall& autotuned_kernel_call(const TritonAnyKernelCall* msg);
};

const ::jax_triton::TritonKernelCall&
TritonAnyKernelCall::_Internal::kernel_call(const TritonAnyKernelCall* msg) {
  return *msg->_impl_.value_.kernel_call_;
}
const ::jax_triton::TritonAutotunedKernelCall&
TritonAnyKernelCall::_Internal::autotuned_kernel_call(const TritonAnyKernelCall* msg) {
  return *msg->_impl_.value_.autotuned_kernel_call_;
}
void TritonAnyKernelCall::set_allocated_kernel_call(::jax_triton::TritonKernelCall* kernel_call) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (kernel_call) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(kernel_call);
    if (message_arena != submessage_arena) {
      kernel_call = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel_call, submessage_arena);
    }
    set_has_kernel_call();
    _impl_.value_.kernel_call_ = kernel_call;
  }
  // @@protoc_insertion_point(field_set_allocated:jax_triton.TritonAnyKernelCall.kernel_call)
}
void TritonAnyKernelCall::set_allocated_autotuned_kernel_call(::jax_triton::TritonAutotunedKernelCall* autotuned_kernel_call) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (autotuned_kernel_call) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(autotuned_kernel_call);
    if (message_arena != submessage_arena) {
      autotuned_kernel_call = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, autotuned_kernel_call, submessage_arena);
    }
    set_has_autotuned_kernel_call();
    _impl_.value_.autotuned_kernel_call_ = autotuned_kernel_call;
  }
  // @@protoc_insertion_point(field_set_allocated:jax_triton.TritonAnyKernelCall.autotuned_kernel_call)
}
TritonAnyKernelCall::TritonAnyKernelCall(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:jax_triton.TritonAnyKernelCall)
}
TritonAnyKernelCall::TritonAnyKernelCall(const TritonAnyKernelCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TritonAnyKernelCall* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metadata_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  clear_has_value();
  switch (from.value_case()) {
    case kKernelCall: {
      _this->_internal_mutable_kernel_call()->::jax_triton::TritonKernelCall::MergeFrom(
          from._internal_kernel_call());
      break;
    }
    case kAutotunedKernelCall: {
      _this->_internal_mutable_autotuned_kernel_call()->::jax_triton::TritonAutotunedKernelCall::MergeFrom(
          from._internal_autotuned_kernel_call());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:jax_triton.TritonAnyKernelCall)
}

inline void TritonAnyKernelCall::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metadata_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_value();
}

TritonAnyKernelCall::~TritonAnyKernelCall() {
  // @@protoc_insertion_point(destructor:jax_triton.TritonAnyKernelCall)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TritonAnyKernelCall::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.metadata_.Destroy();
  _impl_.name_.Destroy();
  if (has_value()) {
    clear_value();
  }
}

void TritonAnyKernelCall::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TritonAnyKernelCall::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:jax_triton.TritonAnyKernelCall)
  switch (value_case()) {
    case kKernelCall: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.kernel_call_;
      }
      break;
    }
    case kAutotunedKernelCall: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.autotuned_kernel_call_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void TritonAnyKernelCall::Clear() {
// @@protoc_insertion_point(message_clear_start:jax_triton.TritonAnyKernelCall)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TritonAnyKernelCall::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .jax_triton.TritonKernelCall kernel_call = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_kernel_call(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .jax_triton.TritonAutotunedKernelCall autotuned_kernel_call = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_autotuned_kernel_call(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "jax_triton.TritonAnyKernelCall.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TritonAnyKernelCall::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jax_triton.TritonAnyKernelCall)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .jax_triton.TritonKernelCall kernel_call = 1;
  if (_internal_has_kernel_call()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::kernel_call(this),
        _Internal::kernel_call(this).GetCachedSize(), target, stream);
  }

  // .jax_triton.TritonAutotunedKernelCall autotuned_kernel_call = 2;
  if (_internal_has_autotuned_kernel_call()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::autotuned_kernel_call(this),
        _Internal::autotuned_kernel_call(this).GetCachedSize(), target, stream);
  }

  // bytes metadata = 3;
  if (!this->_internal_metadata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_metadata(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jax_triton.TritonAnyKernelCall.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jax_triton.TritonAnyKernelCall)
  return target;
}

size_t TritonAnyKernelCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jax_triton.TritonAnyKernelCall)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes metadata = 3;
  if (!this->_internal_metadata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_metadata());
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  switch (value_case()) {
    // .jax_triton.TritonKernelCall kernel_call = 1;
    case kKernelCall: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.kernel_call_);
      break;
    }
    // .jax_triton.TritonAutotunedKernelCall autotuned_kernel_call = 2;
    case kAutotunedKernelCall: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.autotuned_kernel_call_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TritonAnyKernelCall::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TritonAnyKernelCall::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TritonAnyKernelCall::GetClassData() const { return &_class_data_; }


void TritonAnyKernelCall::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TritonAnyKernelCall*>(&to_msg);
  auto& from = static_cast<const TritonAnyKernelCall&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jax_triton.TritonAnyKernelCall)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  switch (from.value_case()) {
    case kKernelCall: {
      _this->_internal_mutable_kernel_call()->::jax_triton::TritonKernelCall::MergeFrom(
          from._internal_kernel_call());
      break;
    }
    case kAutotunedKernelCall: {
      _this->_internal_mutable_autotuned_kernel_call()->::jax_triton::TritonAutotunedKernelCall::MergeFrom(
          from._internal_autotuned_kernel_call());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TritonAnyKernelCall::CopyFrom(const TritonAnyKernelCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jax_triton.TritonAnyKernelCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TritonAnyKernelCall::IsInitialized() const {
  return true;
}

void TritonAnyKernelCall::InternalSwap(TritonAnyKernelCall* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metadata_, lhs_arena,
      &other->_impl_.metadata_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TritonAnyKernelCall::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_triton_2eproto_getter, &descriptor_table_triton_2eproto_once,
      file_level_metadata_triton_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace jax_triton
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::jax_triton::TritonKernel*
Arena::CreateMaybeMessage< ::jax_triton::TritonKernel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jax_triton::TritonKernel >(arena);
}
template<> PROTOBUF_NOINLINE ::jax_triton::TritonKernelCall_Parameter_Array*
Arena::CreateMaybeMessage< ::jax_triton::TritonKernelCall_Parameter_Array >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jax_triton::TritonKernelCall_Parameter_Array >(arena);
}
template<> PROTOBUF_NOINLINE ::jax_triton::TritonKernelCall_Parameter*
Arena::CreateMaybeMessage< ::jax_triton::TritonKernelCall_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jax_triton::TritonKernelCall_Parameter >(arena);
}
template<> PROTOBUF_NOINLINE ::jax_triton::TritonKernelCall*
Arena::CreateMaybeMessage< ::jax_triton::TritonKernelCall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jax_triton::TritonKernelCall >(arena);
}
template<> PROTOBUF_NOINLINE ::jax_triton::TritonAutotunedKernelCall_Config*
Arena::CreateMaybeMessage< ::jax_triton::TritonAutotunedKernelCall_Config >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jax_triton::TritonAutotunedKernelCall_Config >(arena);
}
template<> PROTOBUF_NOINLINE ::jax_triton::TritonAutotunedKernelCall_InputOutputAlias*
Arena::CreateMaybeMessage< ::jax_triton::TritonAutotunedKernelCall_InputOutputAlias >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jax_triton::TritonAutotunedKernelCall_InputOutputAlias >(arena);
}
template<> PROTOBUF_NOINLINE ::jax_triton::TritonAutotunedKernelCall*
Arena::CreateMaybeMessage< ::jax_triton::TritonAutotunedKernelCall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jax_triton::TritonAutotunedKernelCall >(arena);
}
template<> PROTOBUF_NOINLINE ::jax_triton::TritonAnyKernelCall*
Arena::CreateMaybeMessage< ::jax_triton::TritonAnyKernelCall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jax_triton::TritonAnyKernelCall >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
