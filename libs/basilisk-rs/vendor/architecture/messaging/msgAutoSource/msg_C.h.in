#ifndef {type}_C_H
#define {type}_C_H

#include <stdint.h>
#include "architecture/{structHeader}"
#include "architecture/messaging/msgHeader.h"

//! structure definition
typedef struct {{
    MsgHeader header;              //!< message header, zero'd on construction
    {type}Payload payload;		        //!< message copy, zero'd on construction
    {type}Payload *payloadPointer;	    //!< pointer to message
    MsgHeader *headerPointer;      //!< pointer to message header
}} {type}_C;

#ifdef __cplusplus
extern "C" {{
#endif

void {type}_cpp_subscribe({type}_C *subscriber, void* source);

void {type}_C_subscribe({type}_C *subscriber, {type}_C *source);

int8_t {type}_C_isSubscribedTo({type}_C *subscriber, {type}_C *source);
int8_t {type}_cpp_isSubscribedTo({type}_C *subscriber, void* source);

void {type}_C_addAuthor({type}_C *coowner, {type}_C *data);

void {type}_C_init({type}_C *owner);

int {type}_C_isLinked({type}_C *data);

int {type}_C_isWritten({type}_C *data);

uint64_t {type}_C_timeWritten({type}_C *data);

int64_t {type}_C_moduleID({type}_C *data);

void {type}_C_write({type}Payload *data, {type}_C *destination, int64_t moduleID, uint64_t callTime);

{type}Payload {type}_C_read({type}_C *source);

{type}Payload {type}_C_zeroMsgPayload();

#ifdef __cplusplus
}}
#endif
#endif