{
  "created": 1711490284.16583,
  "duration": 0.24048495292663574,
  "exitcode": 1,
  "root": "/Users/akhilles/src/elo/paracosm/libs/nox-py",
  "environment": {},
  "summary": {
    "passed": 8,
    "failed": 2,
    "total": 10,
    "collected": 10
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "examples/ball.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "examples/ball.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=0]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=1]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=2]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=3]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=4]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=5]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=6]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=7]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=8]",
          "type": "Function",
          "lineno": 80
        },
        {
          "nodeid": "examples/ball.py::test_origin_drift[sample_number=9]",
          "type": "Function",
          "lineno": 80
        }
      ]
    }
  ],
  "tests": [
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=0]",
      "lineno": 80,
      "outcome": "passed",
      "keywords": [
        "test_origin_drift[sample_number=0]",
        "sample_number=0",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.00013741699513047934,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017573750228621066,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00006608304101973772,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=1]",
      "lineno": 80,
      "outcome": "passed",
      "keywords": [
        "test_origin_drift[sample_number=1]",
        "sample_number=1",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.00006954197306185961,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0011304159997962415,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00006200000643730164,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=2]",
      "lineno": 80,
      "outcome": "passed",
      "keywords": [
        "test_origin_drift[sample_number=2]",
        "sample_number=2",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.00007416697917506099,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0010870830155909061,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00005079200491309166,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=3]",
      "lineno": 80,
      "outcome": "passed",
      "keywords": [
        "test_origin_drift[sample_number=3]",
        "sample_number=3",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.00006012496305629611,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0010718749836087227,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00005037500523030758,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=4]",
      "lineno": 80,
      "outcome": "failed",
      "keywords": [
        "test_origin_drift[sample_number=4]",
        "sample_number=4",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.000057124998420476913,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0011363329831510782,
        "outcome": "failed",
        "crash": {
          "path": "/Users/akhilles/src/elo/paracosm/libs/nox-py/examples/ball.py",
          "lineno": 92,
          "message": "assert 15.38150375357547 < 10"
        },
        "traceback": [
          {
            "path": "libs/nox-py/examples/ball.py",
            "lineno": 92,
            "message": "AssertionError"
          }
        ],
        "longrepr": "df = shape: (1_200, 6)\n┌──────┬─────────────────────────┬────────────┬──────────┬───────────┬───────────┐\n│ time ┆ 67092656...┆ 0.307783 ┆ -6.562894 ┆ 15.381504 │\n└──────┴─────────────────────────┴────────────┴──────────┴───────────┴───────────┘\n\n    def test_origin_drift(df: pl.DataFrame):\n        world_pos_id = str(el.Component.id(el.WorldPos))\n        df = df.sort(\"time\").select([\"time\", world_pos_id]).drop_nulls()\n        df = df.with_columns(\n            pl.col(world_pos_id).arr.get(4).alias(\"x\"),\n            pl.col(world_pos_id).arr.get(5).alias(\"y\"),\n            pl.col(world_pos_id).arr.get(6).alias(\"z\"),\n        )\n        distance = np.linalg.norm(df.select([\"x\", \"y\", \"z\"]).to_numpy(), axis=1)\n        df = df.with_columns(pl.Series(distance).alias(\"distance\"))\n        max_dist = cast(int, df[\"distance\"].max())\n>       assert max_dist < 10\nE       assert 15.38150375357547 < 10\n\nlibs/nox-py/examples/ball.py:92: AssertionError"
      },
      "teardown": {
        "duration": 0.00010066700633615255,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=5]",
      "lineno": 80,
      "outcome": "passed",
      "keywords": [
        "test_origin_drift[sample_number=5]",
        "sample_number=5",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.0000914169941097498,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0012036670232191682,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00006037496495991945,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=6]",
      "lineno": 80,
      "outcome": "passed",
      "keywords": [
        "test_origin_drift[sample_number=6]",
        "sample_number=6",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.00007470801938325167,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0009511249954812229,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.000051084032747894526,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=7]",
      "lineno": 80,
      "outcome": "failed",
      "keywords": [
        "test_origin_drift[sample_number=7]",
        "sample_number=7",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.000060959020629525185,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0010751250083558261,
        "outcome": "failed",
        "crash": {
          "path": "/Users/akhilles/src/elo/paracosm/libs/nox-py/examples/ball.py",
          "lineno": 92,
          "message": "assert 10.47433324154808 < 10"
        },
        "traceback": [
          {
            "path": "libs/nox-py/examples/ball.py",
            "lineno": 92,
            "message": "AssertionError"
          }
        ],
        "longrepr": "df = shape: (1_200, 6)\n┌──────┬──────────────────────────┬────────────┬──────────┬────────────┬───────────┐\n│ time ┆ 670926....323606 ┆ -0.971379  ┆ 10.474333 │\n└──────┴──────────────────────────┴────────────┴──────────┴────────────┴───────────┘\n\n    def test_origin_drift(df: pl.DataFrame):\n        world_pos_id = str(el.Component.id(el.WorldPos))\n        df = df.sort(\"time\").select([\"time\", world_pos_id]).drop_nulls()\n        df = df.with_columns(\n            pl.col(world_pos_id).arr.get(4).alias(\"x\"),\n            pl.col(world_pos_id).arr.get(5).alias(\"y\"),\n            pl.col(world_pos_id).arr.get(6).alias(\"z\"),\n        )\n        distance = np.linalg.norm(df.select([\"x\", \"y\", \"z\"]).to_numpy(), axis=1)\n        df = df.with_columns(pl.Series(distance).alias(\"distance\"))\n        max_dist = cast(int, df[\"distance\"].max())\n>       assert max_dist < 10\nE       assert 10.47433324154808 < 10\n\nlibs/nox-py/examples/ball.py:92: AssertionError"
      },
      "teardown": {
        "duration": 0.00005075003718957305,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=8]",
      "lineno": 80,
      "outcome": "passed",
      "keywords": [
        "test_origin_drift[sample_number=8]",
        "sample_number=8",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.00006104103522375226,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0008702079649083316,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.000047208042815327644,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "examples/ball.py::test_origin_drift[sample_number=9]",
      "lineno": 80,
      "outcome": "passed",
      "keywords": [
        "test_origin_drift[sample_number=9]",
        "sample_number=9",
        "ball.py",
        "examples",
        "nox-py",
        ""
      ],
      "setup": {
        "duration": 0.00005425000563263893,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.000952000031247735,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00005400000372901559,
        "outcome": "passed"
      }
    }
  ]
}
