[workspace]
resolver = "2"
members = [
    "apps/editor-web",
    "libs/elodin-editor",
    "libs/elodin-types/rust",
    "libs/impeller",
    "libs/nox",
    "libs/nox-ecs",
    "libs/nox-ecs-macros",
    "libs/nox-py",
    "libs/nox-frames",
    "libs/noxla",
    "libs/atc/migration",
    "libs/atc/entity",
    "libs/redmq",
    "services/atc",
    "services/sim-agent",
    "services/sim-builder",
    "apps/elodin",
    # "libs/unreal-plugin",
    "libs/basilisk-rs",
    "libs/roci",
    "libs/roci/macros",
    "libs/roci/adcs",
    "libs/wmm",
    "clients/care-weather/adcs",
    "clients/care-weather/helmholtz-chamber",
    "clients/care-weather/mcu-client",
    "libs/s10",
    "apps/dev-tools",
    "libs/impeller2"
]
exclude = [
    "fsw/multicopter",
    "docs/memserve",
]

[workspace.package]
version = "0.9.0"
repository = "https://github.com/elodin-sys/paracosm"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.20.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = []
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Skip checking whether the specified configuration files are up to date
allow-dirty = ["ci"]
# Build only the required packages, and individually
precise-builds = true
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Whether to auto-include files like READMEs, LICENSEs, and CHANGELOGs (default true)
auto-includes = false

[workspace.metadata.dist.github-custom-runners]
x86_64-unknown-linux-gnu = "ubuntu-22.04"
aarch64-apple-darwin = "macos-14"

[workspace.metadata.dist.dependencies.apt]
"g++" = '*'
pkg-config = '*'
libx11-dev = '*'
libasound2-dev = '*'
libudev-dev = '*'
libxkbcommon-x11-0 = '*'
libwayland-dev = '*'
libxkbcommon-dev = '*'
protobuf-compiler = '*'
gfortran = '*'
gfortran-12 = '*'
libgfortran-12-dev = '*'

[workspace.metadata.dist.dependencies.chocolatey]
cmake = '*'
protoc = '*'

[profile.wasm-release]
inherits = "release"
opt-level = "z"
lto = "fat"
codegen-units = 1
strip = "debuginfo"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

[workspace.dependencies]
# set workspace version as the version of xla
xla.package = "noxla"
xla.path = "libs/noxla"
xla.version = "0.9.0"
roci-macros.path = "libs/roci/macros"
roci-macros.version = "0.9.0"
roci.path = "libs/roci"
roci.default-features = false
roci-adcs.path = "libs/roci/adcs"
nox.path = "libs/nox"
nox.default-features = false
nox.version = "0.9.0"
nox-ecs.path = "libs/nox-ecs"
basilisk.path = "libs/basilisk-rs"
impeller.path = "libs/impeller"
impeller.default-features = false
impeller.version = "0.9.0"
nox-frames.path = "libs/nox-frames"
wmm.path = "libs/wmm"

[patch.crates-io]
# Remove after https://github.com/dtolnay/thiserror/pull/304 is merged
thiserror = { git = "https://github.com/quartiq/thiserror.git", rev = "e779e1b" }
# Remove after https://github.com/NotIntMan/inplace_it/pull/16 is merged
inplace_it = { git = "https://github.com/akhilles/inplace_it.git", rev = "61077d3" }
# Remove after there's a new release on https://crates.io/crates/faer > 0.19.4
faer = { git = "https://github.com/sarah-quinones/faer-rs.git", rev = "4f3eb7e" }
